=begin
Наш метод примет обычный объект и процедурный объект, и вызовет процедурный объект с обычным объектом
в качестве параметра. качестве параметра. Если процедурный объект вернёт false, мы закончим выполнение,
иначе мы вызовем процедурный объект с возвращённым объектом. Мы будем продолжать так делать, пока
процедурный объект не вернёт false (что ему лучше сделать в конце концов, иначе программа "загнётся").
Этот метод вернёт последнее значение, возвращённое процедурным объектом, не равное false.
Метод inspect во многом похож на to_s за исключением того, что возвращаемая им строка — это попытка
показать код на Ruby для создания объекта, который вы ему передали. Здесь он показывает нам весь массив,
возвращённый при нашем первом вызове метода doUntilFalse. Вы, должно быть, также заметили, что мы сами
никогда не возводили в квадрат этот 0 в конце массива, но поскольку 0 в квадрате всегда равен 0,
нам это и не нужно было делать. А так как alwaysFalse, как вы знаете, возвращает всегда false,
метод doUntilFalse ничего не делал, когда мы вызвали его во второй раз; он просто вернул то,
что ему было передано.
=end

def doUntilFalse firstInput, someProc #Метод с двумя объектами: обычный (массив из одного числа) [5] и процедурный buildArrayOfSquares
  input = firstInput #Входящей переменной input присваивается массив [5]
  output = firstInput #Исходящей переменной output присваивается массив [5]

  while output #Запуск цикла до тех пор, пока он не имеет значений, отличных от false или nil (другими словами цикл исполняется, пока значением не станет false или nil)
    input = output # Значение output присваивается переменной input
    output = someProc.call input #??? Переменной output присваивается процедурный объект, который использует input в качестве аргумента
  end

  input # Метод возвращает значение переменной
end

buildArrayOfSquares = Proc.new do |array| # Создание массива из квадратов чисел
  lastNumber = array.last # lastNumber позначается последним элементом массива
  if array.last <= 0 # Условия прерывания, если послений элемент становиться равным или меньше 0
    false
  else
    array.pop # Убирает из массива последнее число
    array.push lastNumber * lastNumber # Добавление в конец массива квадрата последнего числа (которое убрали выше)
    array.push lastNumber - 1 # Позначает последним элементом массива предыдущий
  end
end

alwaysFalse = Proc.new do |justIgnoreMe| # Процедура, которая возвращает ложь
  false
end

puts doUntilFalse([5], buildArrayOfSquares).inspect
puts doUntilFalse("Я пишу это в 3 часа ночи; кто то меня вырубил!", alwaysFalse)
