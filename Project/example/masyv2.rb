arr = [3, 1, 2, 4] #.to_a.shuffle # створюється масив з діапазоном від -3 до 6 та перемішується
# arr.concat([2, 2, 0, 5]) # додаються нові елементи до масиву
puts arr.to_s

puts ''

period = arr.length - 2 # змінна, яка дорівнює довжині масиву - 2. 14-2=12
n = 1 # змінна ітерації

puts ''

period.times do |_| # повторення дії period разів - 14-2=12
  max = arr[0] # змінній присвоюється 0 елемент масива, тобто самий перший
  max_i = 0 # індекс найбільшого елементу
  arr.each.with_index do |x, i| # для кожного елементу масива (х) та його індексу (і) виконується цикл
    break if i >= arr.length-n # зупинка циклу, коли (і - індекс елементу) більше або дорівнює довжині масиву - (n) => 14-1
    if x > max # якщо елемент масиву (х) більший від найбільшого елементу (max)
      max = x # цей елемент (x) стає (max)
      max_i = i # його індекс стає індексом максимального елементу
    end
  end
  p([max, max_i, arr.length-n]) # виводиться найбільший елемент (max), його індекс (max_i) та довжина масиву - (n) 12-1=11

  arr[max_i], arr[arr.length-n] = arr[arr.length-n], arr[max_i] # індексу максимального елементу присвоюється довжина масиву - (n), а довжині масиву - (n) присвоюється індекс максимального елементу

  n += 1 # збільшення кроку ітерації
  puts arr.to_s
  puts ''

end
